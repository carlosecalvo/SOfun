% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/list_reduction.R
\name{list_reduction}
\alias{list_reduction}
\title{Successively Applies a Function at Each Index in a List}
\usage{
list_reduction(inlist, fun = intersect, flatten = FALSE, sorted = FALSE)
}
\arguments{
\item{inlist}{The input \code{list}.}

\item{fun}{The function to be applied. Note that the supplied function should be one
that you would expect to have work with two or more \code{vectors} as the given arguments.
Thus, you can expect \code{range} to work, but not \code{mean}.}

\item{flatten}{Logical. Should the output be simplified from a \code{list}. Defaults to
\code{FALSE}. This is useful when you expect the result at each \code{list} index to be a
single value (for example, when using a function like \code{sum} or \code{max}).}

\item{sorted}{Logical. Should the values at each \code{list} index be sorted? Defaults
to \code{FALSE}.}
}
\value{
A \code{list} (default) or a simple \code{vector} (if \code{flatten = TRUE}).
}
\description{
Successively applies a function (\code{intersect}, by default) to elements
at each index level in a \code{list}.
}
\examples{

L <- list(colA = list(c("a", "b", "c", "Ã±"), c("f", "g", "h"), c("i", "j", "k")), 
          colB = list(c("d", "b", "e"), c("f", "g", "m", "p"), c("f", "o", "j")),
          colC = list(c("a", "b", "g"), c("l", "g", "f", "k", "h"), c("j", "o", "l")))
list_reduction(L)
list_reduction(L, flatten = TRUE)

set.seed(1)
L2 <- replicate(3, replicate(3, sample(sample(20), sample(10), TRUE), FALSE), FALSE)
list_reduction(L2)
list_reduction(L2, sum)
list_reduction(L2, range)
list_reduction(L2, union)
list_reduction(L2, union, sorted = TRUE)

}
\references{
See: \url{https://stackoverflow.com/q/62454705/1270695}
}
\author{
Ananda Mahto
}
